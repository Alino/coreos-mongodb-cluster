[Unit]
Description=ReplicaSet Configurator
BindsTo=mongo@1.service

[Service]
KillMode=none
TimeoutStartSec=360
TimeoutStopSec=360
EnvironmentFile=/etc/environment
ExecStartPre=/bin/bash -c "docker pull 19hz/mongo-container:latest"
ExecStart=/bin/bash -c " \
    REPLICA_NAME=$(etcdctl get /mongo/replica/name 2>/dev/null || true); \
    SITE_ROOT_PWD=$(etcdctl get /mongo/replica/siteRootAdmin/pwd 2>/dev/null || true ); \
    REPLICA_KEY=$(etcdctl get /mongo/replica/key 2>/dev/null || true); \
    RS_INIT_DONE=$(etcdctl get /mongo/replica/rs_init_done 2>/dev/null || true ); \
    RS_CONFIG_DONE=$(etcdctl get /mongo/replica/rs_config_done 2>/dev/null || true ); \
    RS_ADDING_NODES_DONE=$(etcdctl get /mongo/replica/rs_adding_node_done 2>/dev/null || true ); \
    OTHER_NODES=$(etcdctl ls /mongo/replica/nodes | xargs -I{} basename {} | xargs -I{} echo {}:27017 | grep -v '$COREOS_PRIVATE_IPV4'); \
    ADD_CMDS=$(etcdctl ls /mongo/replica/nodes | grep -v '$COREOS_PRIVATE_IPV4' | xargs -I{} basename {} | xargs -I{} echo \"rs.add('{}:27017');\"); \
    if [ -z \"$SITE_ROOT_PWD\" ]; \
    then \
        echo 'WAITING.... siteRootAdmin is not yet configured...'; \
        sleep 60; \
        /usr/bin/systemctl restart %n; \
    fi; \
    if [ \[ -z \"$RS_INIT_DONE\" \] && \[ -n $(/usr/bin/docker ps | grep mongodb) \] ]; \
    then \
        echo 'trying to init the replicaset...'; \
        docker run -t --volumes-from mongo-data1 19hz/mongo-container:latest \
            mongo $COREOS_PRIVATE_IPV4/admin -u siteRootAdmin -p $SITE_ROOT_PWD \
            --eval \"rs.status().startupStatus === 3 && rs.initiate();\"; \
        etcdctl set /mongo/replica/rs_init_done finished; \
    fi; \
"
Restart=on-failure
[X-Fleet]
MachineOf=mongo@1.service